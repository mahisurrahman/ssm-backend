##########################################
####          Sale Module             ####
##########################################

## Module Code: 3.1
## Module Name: Sale
## Method: Create Sale
## Method Code: 3.1.1
## Technical Description: This API results in creation of sttocks of a particular product by passing the Product's Id, and Stock Quantity.
##productId = ObjectId('65f7fb3d51d8978531f0a1e8');

POST http://localhost:8000/sales/crt HTTP/1.1
Content-Type: application/json

{
    "sales": [
        {
        "quantitySold": 2,
        "sellingPrice": 200,
        "productId": "65f7fb3d51d8978531f0a1e8"
        }
    ]
}

##      UseCase: To create sales for multiple products purchases. 
##          Note: If the products are out of Stock it will throw error. 
##          Note: If No Products are Found it will throw an error. 



#################################################################################



###
## Module Code: 3.1
## Module Name: Sale
## Method: Show All Sales
## Method Code: 3.1.2
## Technical Description: This API results in Showing/Displaying all the Sales.

GET http://localhost:8000/sales/src HTTP/1.1


##      UseCase: To Display all the Sales Listed
            Note: 




#################################################################################




###
## Module Code: 3.1
## Module Name: Sale
## Method: Showing Single Sales
## Method Code: 3.1.3
## Technical Description: This API results in Showing/Displaying Single List the Sales with the help of the Prdcut's Id.



GET http://localhost:8000/sales/src/65fe7e61e70d34519c458ea6 HTTP/1.1




##         UseCase: To get a Single Sale Listing
##              Note: Invalid Sale's Id will throw an error for no sale found. 





#################################################################################




